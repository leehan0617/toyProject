<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-4.2.xsd">
						
	<http pattern="/**/*.js" security="none"/>
	<http pattern="/**/*.css" security="none"/>
	<http pattern="/image/*" security="none"/>
	
	<http auto-config="true" use-expressions="true">
		<!-- url 별 권한정보 , 추후 annotation으로 대체-->  
		<!--  
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/admin/**" access="hasRole('01')" />
		<intercept-url pattern="/project" access="hasRole('02')" />
		<intercept-url pattern="/**" access="permitAll" />
		-->
		
		<!--로그인
			login-page : 로그인 페이지 , 세션 인증이 없는 경우 호출되는 URL
			username-parameter : 로그인 페이지에서 사용될 ID 파라미터 속성명 (name속성)
			password-parameter : 로그인 페이지에서 사용될 PW 파라미터 속성명 (name속성)
			default-target-url : 로그인 후 호출될 URL authentication-success-handler-ref를 구현하면 작동하지 않는다.
			authentication-failure-url : 로그인이 실패될때 호출되는 url (? 뒤의값은 실패인지 최초접속인지 등등 구분하기 위한 값)
			authentication-success-handler-ref : 로그인 성공 이후 호출되는 핸들러, 직접 후처리를 작업할 경우 사용
			login-processing-url : 로그인 처리를 호출할때 사용 할 URL 보여지는 URL 일뿐 j_spring_security_check가 호출되어 로그인 처리한다.
			default-target-url="/project" (authentication-success-handler를 사용안할 경우 사용한다.)
		-->
		<form-login login-page="/login"
			username-parameter="loginId"
			password-parameter="loginPwd"
			login-processing-url="/loginProcess"
			authentication-failure-url="/login?error=1"
			always-use-default-target="true"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"/>
		
		<!-- 로그아웃 
			invalidate-session : 세션 삭제 여부
			logout-success-url : 로그아웃 성공 후 호출될 URL (success-handler-ref를 사용할경우 이건 쓰면안된다 둘중하나만 써야함)
			logout-url : 로그아웃 처리를 요청할때 사용할 URL. 보여지는 URL 일뿐 j_spring_security_logout이 호출되어 로그아웃을 처리한다.
			delete-cookie : 쿠키를 삭제한다. remember me가 구현되면 사용되어질 예정
		-->
		<logout logout-url="/logout"
			success-handler-ref="customLogoutHandler"
			invalidate-session="true"
			delete-cookies="JSESSIONID,toy-remember-cookie,toy-remember-key"/>
		<!-- Remember me -->
		<remember-me key="toy-remember-key"
		remember-me-cookie="toy-remember-cookie"
		remember-me-parameter="toy-remember-me"
		token-validity-seconds="1209600" 
		token-repository-ref="jdbcTokenRef"/>
		
		<!-- 중복세션 -->
		<!--  
		<session-management invalid-session-url="/login">
		 <concurrency-control max-sessions="1" expired-url="/loginDuplicate"/>
		</session-management>
		-->		
		<!-- 접속 권한이 없을때 실행 -->
 		<access-denied-handler ref="customAccessDeniedHandler"/>
 			
		<!-- csrf 설정 -->
		<csrf/>
	</http>
	
	<beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
	<!-- remember me 하기 위해 토큰 값을 생성하는 bean -->
	<beans:bean id="jdbcTokenRef" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<beans:property name="createTableOnStartup" value="false"/>
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	<!-- access 접근 거부 페이지 관련 bean -->
	<beans:bean id="customAccessDeniedHandler" class="com.toy.security.service.impl.CustomAccessDeniedHandler">
		<beans:property name="errorUrl" value="/denied"/>
	</beans:bean>
	
	<!-- 암호화 알고리즘 설정 -->
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- 로그인 로직 설정 -->
	<authentication-manager>
	 	<authentication-provider user-service-ref="userService"> 
	 		<password-encoder ref="bcryptEncoder"/>
	 	</authentication-provider>
	</authentication-manager>
	<!-- 로그인 로직 핸들러 설정 -->
	<beans:bean id="userService" class="com.toy.security.service.impl.UserServiceImpl"/>
</beans:beans>