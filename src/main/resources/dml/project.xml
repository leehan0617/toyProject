<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">
	
	<!-- 20170516 김민지 프로젝트 생성하기-->
	<insert id="insertProject" parameterType="com.toy.project.model.ProjectDto">
		insert into project
			(
				project_name
				, project_start_date
				, project_end_date
				, project_detail
				, manager_id
				, state_code
				, reg_date
			)	
	   values
			(
			  #{project_name}
			 ,#{project_start_date}
			 ,#{project_end_date}
			 ,#{project_detail}
			 ,#{manager_id}
			 ,'recruiting'
			 ,sysdate()
			) 
		<selectKey keyProperty="project_id" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>	
	</insert>
	
	<!-- 20170516 김민지 프로젝트별 직무 생성하기-->
	<insert id="insertProjectDepart" parameterType="HashMap">
		insert into projectdepartment
		(    project_id
			, depart_code
			, usercount
		)
		VALUES
			(
			#{project_id}	
			,#{depart_code}
			,#{usercount}
			)
	</insert>
	<!-- 20170517 김민지 프로젝트 리스트 불러오기 -->
	<select id="getProjectList" parameterType="com.toy.project.model.ProjectDto" resultType="com.toy.project.model.ProjectDto">
		select 
				project.project_id
				, project_name
				, project_start_date
				, project_end_date
				, usercount
				, project_detail
				, manager_id
				, (select user_name from user where user_id = manager_id) as manager_name
				, project.state_code
				, (select state_name from state where state_code = project.state_code) as state_name
				, project.reg_date
				, depart_code
				, (select depart_name from department where depart_code = prodepart.depart_code) as depart_name
				, if(isnull(promember.user_id),'Y','N') as applyyn
		from project 
        left join (
				select *
				from projectdepartment
		)prodepart on project.project_id = prodepart.project_id
		 left join (
				select *
				from projectmember
		)promember on project.project_id = promember.project_id and promember.user_id = #{user_id}
		<if test="manager_id != null">
			where manager_id = #{manager_id}
		</if>
<!-- 				project_start_date	 -->
	</select>
	
	<!-- 20170524 김민지 프로젝트 상세  -->
	<select id="getProjectDetail" parameterType="com.toy.project.model.ProjectDto" resultType="com.toy.project.model.ProjectDto">
		select 
				project.project_id
				, project.project_name
				, project.project_start_date
				, project.project_end_date
				, project.project_detail
				, project.manager_id
				, (select user_name from user where user_id = manager_id) as manager_name
				, if(isnull(promember.user_id),'Y','N') as applyyn
		from project project
		left join (
				select *
				from projectmember
		)promember on project.project_id = promember.project_id and promember.user_id = #{user_id}
		where project.project_id = #{project_id}
	</select>
	<!-- 20170524 김민지 프로젝트 상세 직무 보기 -->
	<select id="getProjectDePDetail" parameterType="com.toy.project.model.ProjectDto" resultType="com.toy.project.model.ProjectDto">
		select project_id
			   ,depart_code
			   ,(select depart_name from department where depart_code = projectdepartment.depart_code) as depart_name
			   ,usercount
		from projectdepartment
		where project_id = #{project_id}
	</select>
	<!-- 20170601 프로젝트 맴버 insert -->
	<insert id="insertProjectMember" parameterType="com.toy.project.model.ProjectDto">
		insert into projectmember
		(   project_id
			,user_id
			,state_code
			,depart_detail
			,reg_date
			,reg_id
		)
		values(
			#{project_id}	
			,#{user_id}
			,#{state_code}
			,#{depart_detail}
			,sysdate()
			,#{reg_id}
		)
	</insert>
	
	<!-- 20170605 김민지 프로젝트 삭제하기 -->
	<delete id="deleteProject" parameterType="com.toy.project.model.ProjectDto">
		delete 
		from  project
		where project_id = #{project_id}
 	</delete>
	<!-- 20170605 김민지 프로젝트상세직무 삭제하기 -->
	<delete id="deleteProjectDePDetail" parameterType="com.toy.project.model.ProjectDto">
		delete 
		from  projectdepartment
		where project_id = #{project_id}
	</delete>
	
	<!-- 20170605 김민지 프로젝트맴버 삭제하기 -->
	<delete id="deleteProjectMember" parameterType="com.toy.project.model.ProjectDto">
		delete 
		from  projectmember
		where project_id = #{project_id}
	</delete>
	
	<!-- 20170605 김민지 프로젝트맴버  등록여부(본인제외) -->
	<select id="selectProjectMemberCnt" parameterType="com.toy.project.model.ProjectDto" resultType="int">
		select count(*) as cnt
		from  projectmember
		where project_id = #{project_id}
		and user_id != #{user_id}
	</select>
	
	<!-- 20170605 김민지 프로젝트 모집완료여부 -->
	<select id="selectProjectState" parameterType="com.toy.project.model.ProjectDto" resultType="string">
		select state_code  
		from  project
		where project_id = #{project_id}
	</select>
	
	<!-- 20170608 김민지 프로젝트 수정하기-->
	<update id="updateProject" parameterType="com.toy.project.model.ProjectDto">
		update  project
		set project_name =  #{project_name}
			,project_start_date = #{project_start_date}
			,project_end_date =  #{project_end_date}
			,project_detail = #{project_detail}
			,mod_id =  #{mod_id}
			,mod_date  = sysdate()
		where project_id = #{project_id}
	</update>
</mapper>