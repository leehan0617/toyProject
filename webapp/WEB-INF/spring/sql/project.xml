<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">
	
	<!-- 20170516 김민지 프로젝트 생성하기-->
	<insert id="insertProject" parameterType="com.toy.project.model.ProjectDto">
		insert into project
			(
				project_name
				, project_start_date
				, project_end_date
				, usercount
				, project_detail
				, manager_id
				, state_code
				, reg_date
			)	
	   values
			(
			  #{project_name}
			 ,#{project_start_date}
			 ,#{project_end_date}
			 ,#{usercount}
			 ,#{project_detail}
			 ,#{manager_id}
			 ,'0101'
			 ,sysdate()
			) 
		<selectKey keyProperty="project_id" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>	
	</insert>
	
	<!-- 20170516 김민지 프로젝트별 직무 생성하기-->
	<insert id="insertProjectDepart" parameterType="com.toy.project.model.ProjectDto">
		insert into projectdepartment
		(    project_id
			,depart_code
		)
		VALUES
		<foreach collection="depart_code" item="depart_code" separator=",">
			(
			#{project_id}	
			,#{depart_code})
		</foreach>	
	</insert>
	<!-- 20170517 김민지 프로젝트 리스트 불러오기 -->
	<select id="getProjectList" parameterType="com.toy.project.model.ProjectDto" resultType="com.toy.project.model.ProjectDto">
		select 
				project.project_id
				, project_name
				, project_start_date
				, project_end_date
				, usercount
				, project_detail
				, (select user_name from user where user_id = manager_id) as manager_name
				, (select state_name from state where state_code = project.state_code) as state_name
				, reg_date
				, (select depart_name from department where depart_code = projectdepartment.depart_code) as depart_name
		from project , projectdepartment
		where project.project_id = projectdepartment.project_id
		<if test="manager_id != null">
			where manager_id = #{manager_id}
		</if>
<!-- 				project_start_date	 -->
	</select>
</mapper>